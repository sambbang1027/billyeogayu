/* 1) USERS */
CREATE TABLE USERS (
                       user_id       NUMBER GENERATED BY DEFAULT AS IDENTITY,
                       login_id      VARCHAR2(50)  NOT NULL,
                       email         VARCHAR2(50)  NOT NULL,
                       password      VARCHAR2(255) NOT NULL,
                       name          VARCHAR2(10)  NOT NULL,
                       phone_number  VARCHAR2(20)  NOT NULL,
                       birth         DATE          NOT NULL,
                       address       VARCHAR2(200) NOT NULL,
                       role          VARCHAR2(10)  NOT NULL,
                       created_at    DATE DEFAULT SYSDATE NOT NULL,
                       updated_at    DATE,
                       deleted_at    DATE,
                       is_deleted    VARCHAR2(1) DEFAULT 'N' NOT NULL,
                       CONSTRAINT PK_USERS PRIMARY KEY (user_id),
                       CONSTRAINT UQ_USERS_LOGIN UNIQUE (login_id),
                       CONSTRAINT UQ_USERS_EMAIL UNIQUE (email),
                       CONSTRAINT CHK_USERS_ROLE CHECK (role IN ('COMMON','ADMIN')),
                       CONSTRAINT CHK_USERS_IS_DELETED CHECK (is_deleted IN ('Y','N'))
);

/* 2) ASSET */
CREATE TABLE ASSET (
                       asset_id                  NUMBER GENERATED BY DEFAULT AS IDENTITY,
                       maintenance_cycle         NUMBER,
                       last_maintenance_date     DATE,
                       expected_maintenance_date DATE,
                       usage_time                NUMBER,
                       status                    VARCHAR2(20) NOT NULL,
                       name                      VARCHAR2(50) NOT NULL,
                       image                     VARCHAR2(100),
                       category                  VARCHAR2(20) NOT NULL,
                       company                   VARCHAR2(30) NOT NULL,
                       created_at                DATE DEFAULT SYSDATE NOT NULL,
                       updated_at                DATE,
                       deleted_at                DATE,
                       is_deleted                VARCHAR2(1) DEFAULT 'N' NOT NULL,
                       CONSTRAINT PK_ASSET PRIMARY KEY (asset_id),
                       CONSTRAINT CHK_ASSET_STATUS CHECK (
                           status IN ('AVAILABLE','USING','MAINTENANCE_REQUIRED','MAINTAINING')
                           ),
                       CONSTRAINT CHK_ASSET_IS_DELETED CHECK (is_deleted IN ('Y','N'))
);

/* 3) PART */
CREATE TABLE PART (
                      part_id                NUMBER GENERATED BY DEFAULT AS IDENTITY,
                      asset_id               NUMBER NOT NULL,
                      name                   VARCHAR2(50) NOT NULL,
                      status                 VARCHAR2(30) NOT NULL,
                      last_maintenance_date  DATE,
                      expected_maintenance_date DATE,
                      usage_time             NUMBER,
                      maintenance_cycle      NUMBER,
                      created_at             DATE DEFAULT SYSDATE NOT NULL,
                      updated_at             DATE,
                      deleted_at             DATE,
                      is_deleted             VARCHAR2(1) DEFAULT 'N' NOT NULL,
                      CONSTRAINT PK_PART PRIMARY KEY (part_id),
                      CONSTRAINT FK_PART_ASSET FOREIGN KEY (asset_id) REFERENCES ASSET(asset_id),
                      CONSTRAINT CHK_PART_STATUS CHECK (
                          status IN ('AVAILABLE','UNAVAILABLE','REPLACE_DONE','REPLACE_REQUIRED')
                          ),
                      CONSTRAINT CHK_PART_IS_DELETED CHECK (is_deleted IN ('Y','N'))
);

/* 4) RESERVATION */
CREATE TABLE RESERVATION (
                             reservation_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
                             user_id        NUMBER NOT NULL,
                             asset_id       NUMBER NOT NULL,
                             start_time     DATE   NOT NULL,
                             end_time       DATE   NOT NULL,
                             purpose        VARCHAR2(100) NOT NULL,
                             status         VARCHAR2(20) DEFAULT 'PENDING' NOT NULL,
                             address        VARCHAR2(200) NOT NULL,
                             address_state  VARCHAR2(20)  NOT NULL,
                             address_city   VARCHAR2(20)  NOT NULL,
                             created_at     DATE DEFAULT SYSDATE NOT NULL,
                             updated_at     DATE,
                             deleted_at     DATE,
                             is_deleted     VARCHAR2(1) DEFAULT 'N' NOT NULL,
                             CONSTRAINT PK_RESERVATION PRIMARY KEY (reservation_id),
                             CONSTRAINT FK_RESERVATION_USER  FOREIGN KEY (user_id)  REFERENCES USERS(user_id),
                             CONSTRAINT FK_RESERVATION_ASSET FOREIGN KEY (asset_id) REFERENCES ASSET(asset_id),
                             CONSTRAINT CHK_RESERVATION_STATUS CHECK (status IN ('APPROVED','PENDING','REJECTED')),
                             CONSTRAINT CHK_RESERVATION_IS_DELETED CHECK (is_deleted IN ('Y','N'))
);

/* 5) MAINTENANCE */
CREATE TABLE MAINTENANCE (
                             maintenance_id     NUMBER GENERATED BY DEFAULT AS IDENTITY,
                             asset_id           NUMBER NOT NULL,
                             admin_id           NUMBER NOT NULL,
                             part_id            NUMBER,
                             type               VARCHAR2(20) NOT NULL,
                             item               VARCHAR2(20),
                             note               VARCHAR2(2000),
                             resolver_name      VARCHAR2(20),
                             resolve_description VARCHAR2(200),
                             resolved_at        DATE,
                             created_at         DATE DEFAULT SYSDATE NOT NULL,
                             updated_at         DATE,
                             deleted_at         DATE,
                             is_deleted         VARCHAR2(1) DEFAULT 'N' NOT NULL,
                             CONSTRAINT PK_MAINTENANCE PRIMARY KEY (maintenance_id),
                             CONSTRAINT FK_MAINTENANCE_ASSET FOREIGN KEY (asset_id) REFERENCES ASSET(asset_id),
                             CONSTRAINT FK_MAINTENANCE_ADMIN FOREIGN KEY (admin_id) REFERENCES USERS(user_id),
                             CONSTRAINT FK_MAINTENANCE_PART  FOREIGN KEY (part_id)  REFERENCES PART(part_id),
                             CONSTRAINT CHK_MAINTENANCE_TYPE CHECK (type IN ('REGULAR','EMERGENCY')),
                             CONSTRAINT CHK_MAINTENANCE_IS_DELETED CHECK (is_deleted IN ('Y','N'))
);

/* 6) USAGE_LOG */
CREATE TABLE USAGE_LOG (
                           usage_log_id   NUMBER GENERATED BY DEFAULT AS IDENTITY,
                           reservation_id NUMBER,
                           user_id        NUMBER,
                           asset_id       NUMBER,
                           start_time     DATE NOT NULL,
                           end_time       DATE,
                           usage_duration NUMBER,
                           usage_status   VARCHAR2(20),
                           processed_by   NUMBER,
                           created_at     DATE DEFAULT SYSDATE NOT NULL,
                           updated_at     DATE,
                           deleted_at     DATE,
                           is_deleted     VARCHAR2(1) DEFAULT 'N' NOT NULL,
                           CONSTRAINT PK_USAGE_LOG PRIMARY KEY (usage_log_id),
                           CONSTRAINT FK_USAGE_LOG_RESERVATION FOREIGN KEY (reservation_id) REFERENCES RESERVATION(reservation_id),
                           CONSTRAINT FK_USAGE_LOG_USER        FOREIGN KEY (user_id)        REFERENCES USERS(user_id),
                           CONSTRAINT FK_USAGE_LOG_ASSET       FOREIGN KEY (asset_id)       REFERENCES ASSET(asset_id),
                           CONSTRAINT FK_USAGE_LOG_PROCESSED   FOREIGN KEY (processed_by)   REFERENCES USERS(user_id),
                           CONSTRAINT CHK_USAGE_LOG_IS_DELETED CHECK (is_deleted IN ('Y','N'))
);

/* 7) ALARM */
CREATE TABLE ALARM (
                       warn_id     NUMBER GENERATED BY DEFAULT AS IDENTITY,
                       asset_id    NUMBER NOT NULL,
                       type        VARCHAR2(20) NOT NULL,
                       description VARCHAR2(2000),
                       created_at  DATE DEFAULT SYSDATE NOT NULL,
                       updated_at  DATE,
                       deleted_at  DATE,
                       is_deleted  VARCHAR2(1) DEFAULT 'N' NOT NULL,
                       CONSTRAINT PK_ALARM PRIMARY KEY (warn_id),
                       CONSTRAINT FK_ALARM_ASSET FOREIGN KEY (asset_id) REFERENCES ASSET(asset_id),
                       CONSTRAINT CHK_ALARM_TYPE CHECK (
                           type IN ('ASSET_REGULAR_MAINTENANCE','PART_REGULAR_REPLACE','RESERVATION_OVERDUE','ASSET_MAINTENANCE_LEAVED')
                           ),
                       CONSTRAINT CHK_ALARM_IS_DELETED CHECK (is_deleted IN ('Y','N'))
);

/* FK 컬럼에 인덱스 권장 */
CREATE INDEX IX_PART_ASSET              ON PART(asset_id);
CREATE INDEX IX_RESERVATION_USER        ON RESERVATION(user_id);
CREATE INDEX IX_RESERVATION_ASSET       ON RESERVATION(asset_id);
CREATE INDEX IX_MAINTENANCE_ASSET       ON MAINTENANCE(asset_id);
CREATE INDEX IX_MAINTENANCE_ADMIN       ON MAINTENANCE(admin_id);
CREATE INDEX IX_MAINTENANCE_PART        ON MAINTENANCE(part_id);
CREATE INDEX IX_USAGE_LOG_RESERVATION   ON USAGE_LOG(reservation_id);
CREATE INDEX IX_USAGE_LOG_USER          ON USAGE_LOG(user_id);
CREATE INDEX IX_USAGE_LOG_ASSET         ON USAGE_LOG(asset_id);
CREATE INDEX IX_USAGE_LOG_PROCESSED_BY  ON USAGE_LOG(processed_by);
CREATE INDEX IX_ALARM_ASSET             ON ALARM(asset_id);
